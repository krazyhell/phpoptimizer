{
  "generated_at": "2025-06-29T12:40:53.329547",
  "summary": {
    "total_files": 1,
    "successful_analyses": 1,
    "total_issues": 21,
    "total_analysis_time": 0.01310276985168457
  },
  "results": [
    {
      "file_path": "examples\\algorithmic_complexity_test.php",
      "issues": [
        {
          "rule_name": "error.syntax",
          "message": "Vérifiez la syntaxe de la structure de contrôle (if, for, while, foreach, switch)",
          "file_path": "examples\\algorithmic_complexity_test.php",
          "line": 4,
          "column": 0,
          "severity": "error",
          "issue_type": "error",
          "suggestion": "Assurez-vous que la syntaxe est correcte et complète",
          "code_snippet": "for ($i = 0; $i < 100; $i++) {"
        },
        {
          "rule_name": "error.possible_assignment_in_condition",
          "message": "Affectation détectée dans une condition (if, for, while, foreach, switch)",
          "file_path": "examples\\algorithmic_complexity_test.php",
          "line": 4,
          "column": 0,
          "severity": "error",
          "issue_type": "error",
          "suggestion": "Vérifiez si c'est bien une affectation voulue et non une erreur",
          "code_snippet": "for ($i = 0; $i < 100; $i++) {"
        },
        {
          "rule_name": "performance.object_creation_in_loop",
          "message": "Création répétée d'objet DateTime dans une boucle avec arguments constants",
          "file_path": "examples\\algorithmic_complexity_test.php",
          "line": 5,
          "column": 0,
          "severity": "warning",
          "issue_type": "performance",
          "suggestion": "Extraire la création de DateTime hors de la boucle et réutiliser l'instance",
          "code_snippet": "$date = new DateTime('2023-01-01'); // ❌ Création répétée avec arguments constants"
        },
        {
          "rule_name": "performance.object_creation_in_loop",
          "message": "Création répétée d'objet Logger dans une boucle avec arguments constants",
          "file_path": "examples\\algorithmic_complexity_test.php",
          "line": 6,
          "column": 0,
          "severity": "warning",
          "issue_type": "performance",
          "suggestion": "Extraire la création de Logger hors de la boucle et réutiliser l'instance",
          "code_snippet": "$logger = Logger::getInstance(); // ❌ Singleton appelé dans boucle"
        },
        {
          "rule_name": "error.syntax",
          "message": "Vérifiez la syntaxe de la structure de contrôle (if, for, while, foreach, switch)",
          "file_path": "examples\\algorithmic_complexity_test.php",
          "line": 12,
          "column": 0,
          "severity": "error",
          "issue_type": "error",
          "suggestion": "Assurez-vous que la syntaxe est correcte et complète",
          "code_snippet": "foreach ($users as $user) {"
        },
        {
          "rule_name": "performance.sort_in_loop",
          "message": "Fonction de tri sort() dans une boucle - complexité O(n²log n) ou pire",
          "file_path": "examples\\algorithmic_complexity_test.php",
          "line": 13,
          "column": 0,
          "severity": "warning",
          "issue_type": "performance",
          "suggestion": "Extraire le tri sort() hors de la boucle pour améliorer les performances",
          "code_snippet": "sort($data); // ❌ Tri dans boucle - O(n²log n)"
        },
        {
          "rule_name": "performance.sort_in_loop",
          "message": "Fonction de tri usort() dans une boucle - complexité O(n²log n) ou pire",
          "file_path": "examples\\algorithmic_complexity_test.php",
          "line": 14,
          "column": 0,
          "severity": "warning",
          "issue_type": "performance",
          "suggestion": "Extraire le tri usort() hors de la boucle pour améliorer les performances",
          "code_snippet": "usort($user_data, 'compare_func'); // ❌ Tri personnalisé dans boucle"
        },
        {
          "rule_name": "error.syntax",
          "message": "Vérifiez la syntaxe de la structure de contrôle (if, for, while, foreach, switch)",
          "file_path": "examples\\algorithmic_complexity_test.php",
          "line": 19,
          "column": 0,
          "severity": "error",
          "issue_type": "error",
          "suggestion": "Assurez-vous que la syntaxe est correcte et complète",
          "code_snippet": "foreach ($items as $item) {"
        },
        {
          "rule_name": "performance.linear_search_in_loop",
          "message": "Recherche linéaire in_array() dans une boucle - complexité O(n²)",
          "file_path": "examples\\algorithmic_complexity_test.php",
          "line": 20,
          "column": 0,
          "severity": "warning",
          "issue_type": "performance",
          "suggestion": "Convertir le tableau en clé-valeur ou utiliser array_flip() avant la boucle pour une recherche O(1)",
          "code_snippet": "if (in_array($item->id, $large_array)) { // ❌ Recherche linéaire O(n²)"
        },
        {
          "rule_name": "error.syntax",
          "message": "Vérifiez la syntaxe de la structure de contrôle (if, for, while, foreach, switch)",
          "file_path": "examples\\algorithmic_complexity_test.php",
          "line": 27,
          "column": 0,
          "severity": "error",
          "issue_type": "error",
          "suggestion": "Assurez-vous que la syntaxe est correcte et complète",
          "code_snippet": "foreach ($users as $user1) {"
        },
        {
          "rule_name": "performance.nested_loop_same_array",
          "message": "Boucles imbriquées sur le même tableau $users - complexité O(n²)",
          "file_path": "examples\\algorithmic_complexity_test.php",
          "line": 28,
          "column": 0,
          "severity": "warning",
          "issue_type": "performance",
          "suggestion": "Revoir l'algorithme pour éviter le parcours quadratique du même tableau",
          "code_snippet": "foreach ($users as $user2) { // ❌ Même tableau - O(n²)"
        },
        {
          "rule_name": "error.syntax",
          "message": "Vérifiez la syntaxe de la structure de contrôle (if, for, while, foreach, switch)",
          "file_path": "examples\\algorithmic_complexity_test.php",
          "line": 28,
          "column": 0,
          "severity": "error",
          "issue_type": "error",
          "suggestion": "Assurez-vous que la syntaxe est correcte et complète",
          "code_snippet": "foreach ($users as $user2) { // ❌ Même tableau - O(n²)"
        },
        {
          "rule_name": "error.syntax",
          "message": "Vérifiez la syntaxe de la structure de contrôle (if, for, while, foreach, switch)",
          "file_path": "examples\\algorithmic_complexity_test.php",
          "line": 29,
          "column": 0,
          "severity": "error",
          "issue_type": "error",
          "suggestion": "Assurez-vous que la syntaxe est correcte et complète",
          "code_snippet": "if ($user1->id !== $user2->id) {"
        },
        {
          "rule_name": "error.possible_assignment_in_condition",
          "message": "Affectation détectée dans une condition (if, for, while, foreach, switch)",
          "file_path": "examples\\algorithmic_complexity_test.php",
          "line": 29,
          "column": 0,
          "severity": "error",
          "issue_type": "error",
          "suggestion": "Vérifiez si c'est bien une affectation voulue et non une erreur",
          "code_snippet": "if ($user1->id !== $user2->id) {"
        },
        {
          "rule_name": "error.syntax",
          "message": "Vérifiez la syntaxe de la structure de contrôle (if, for, while, foreach, switch)",
          "file_path": "examples\\algorithmic_complexity_test.php",
          "line": 36,
          "column": 0,
          "severity": "error",
          "issue_type": "error",
          "suggestion": "Assurez-vous que la syntaxe est correcte et complète",
          "code_snippet": "foreach ($configs as $config) {"
        },
        {
          "rule_name": "performance.query_in_loop",
          "message": "Requête de base de données dans une boucle (problème N+1)",
          "file_path": "examples\\algorithmic_complexity_test.php",
          "line": 38,
          "column": 0,
          "severity": "error",
          "issue_type": "performance",
          "suggestion": "Extraire la requête hors de la boucle ou utiliser une requête groupée",
          "code_snippet": "$result = $pdo->query($config->sql);"
        },
        {
          "rule_name": "error.syntax",
          "message": "Vérifiez la syntaxe de la structure de contrôle (if, for, while, foreach, switch)",
          "file_path": "examples\\algorithmic_complexity_test.php",
          "line": 42,
          "column": 0,
          "severity": "error",
          "issue_type": "error",
          "suggestion": "Assurez-vous que la syntaxe est correcte et complète",
          "code_snippet": "for ($i = 0; $i < 100; $i++) {"
        },
        {
          "rule_name": "error.possible_assignment_in_condition",
          "message": "Affectation détectée dans une condition (if, for, while, foreach, switch)",
          "file_path": "examples\\algorithmic_complexity_test.php",
          "line": 42,
          "column": 0,
          "severity": "error",
          "issue_type": "error",
          "suggestion": "Vérifiez si c'est bien une affectation voulue et non une erreur",
          "code_snippet": "for ($i = 0; $i < 100; $i++) {"
        },
        {
          "rule_name": "performance.heavy_function_in_loop",
          "message": "Lecture de fichier dans une boucle peut être très lent",
          "file_path": "examples\\algorithmic_complexity_test.php",
          "line": 43,
          "column": 0,
          "severity": "warning",
          "issue_type": "performance",
          "suggestion": "Extraire file_get_contents() hors de la boucle et mettre en cache le résultat",
          "code_snippet": "$content = file_get_contents(\"file_$i.txt\"); // ❌ I/O lourde"
        },
        {
          "rule_name": "error.incorrect_argument_count",
          "message": "Fonction file_get_contents() attend 2 arguments, 1 fournis",
          "file_path": "examples\\algorithmic_complexity_test.php",
          "line": 43,
          "column": 0,
          "severity": "error",
          "issue_type": "error",
          "suggestion": "Vérifiez l'appel de fonction et corrigez le nombre d'arguments",
          "code_snippet": "$content = file_get_contents(\"file_$i.txt\"); // ❌ I/O lourde"
        },
        {
          "rule_name": "performance.heavy_function_in_loop",
          "message": "Recherche de fichiers dans une boucle peut être très lent",
          "file_path": "examples\\algorithmic_complexity_test.php",
          "line": 44,
          "column": 0,
          "severity": "warning",
          "issue_type": "performance",
          "suggestion": "Extraire glob() hors de la boucle et mettre en cache le résultat",
          "code_snippet": "$files = glob(\"*.txt\"); // ❌ Scan filesystem"
        }
      ],
      "metrics": {
        "line_count": 48,
        "file_size": 1470
      },
      "analysis_time": 0.01310276985168457,
      "success": true,
      "error_message": ""
    }
  ]
}